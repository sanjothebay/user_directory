{"version":3,"sources":["components/Header.js","utils/API.js","components/UserResultsList.js","components/SearchForm.js","components/SearchResultContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Jumbotron","className","axios","get","User","props","alt","src","image","name","last","phone","href","email","birthdate","SearchForm","onChange","handleInputChange","value","search","type","placeholder","id","SearchResultContainer","state","users","results","allUsers","sort","handlesSortChange","copyOFusersBeingSorted","a","b","setState","event","target","result","filter","employee","Object","values","join","toLowerCase","indexOf","API","then","res","data","this","Table","striped","bordered","hover","onClick","map","user","i","UserResultsList","first","picture","thumbnail","dob","date","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2304217b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/header.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction Header() {\n  return (\n    <Jumbotron>\n      <div className=\"header-bg\">\n        <h1>Employee Directory</h1>\n        <p>\n          Click on Corrorts to filter by or use the search box to narrow your\n          results\n        </p>\n      </div>\n    </Jumbotron>\n  );\n}\n\nexport default Header;\n","import axios from \"axios\";\n\nexport default {\n  getUsers: function () {\n    return axios.get(\"https://randomuser.me/api/?results=10\");\n  },\n\n  getMoreUsers: function (num) {\n    return axios.get(`https://randomuser.me/api/?results=${num}`);\n  },\n};\n","import React from 'react'\n\n\nfunction User (props) {\nreturn(\n   //   {props.results.map((result) =>(\n    <tr>\n      <td><img alt=\"Employee\" src={props.image}></img></td>\n      <td>{props.name} {props.last}</td>\n      <td>{props.phone}</td>\n      <td><a href={`mailto:${props.email}`}>{props.email}</a></td>\n      <td>{props.birthdate}</td>\n    </tr>\n//))}\n)\n \n\n\n}\n\nexport default User;","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.search}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Filter Search\"\r\n          id=\"search\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\nimport API from \"../utils/API\";\nimport UserResultsList from \"./UserResultsList\";\nimport SearchForm from \"./SearchForm\";\nimport { Table } from \"react-bootstrap\";\n\nclass SearchResultContainer extends React.Component {\n  state = {\n    users: [],\n    search: \"\",\n    results: [],\n    allUsers: [],\n    sort: \"ase\",\n  };\n\n  componentDidMount() {\n    API.getUsers().then((res) => {\n      this.setState({ users: res.data.results });\n      this.setState({ allUsers: res.data.results });\n    });\n  }\n\n  handlesSortChange = () => {\n    const copyOFusersBeingSorted = [...this.state.users];\n    copyOFusersBeingSorted.sort((a, b) =>\n      a.email > b.email ? 1 : b.email > a.email ? -1 : 0\n    );\n    this.setState({\n      users: copyOFusersBeingSorted,\n    });\n  };\n\n  handleInputChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const result = this.state.users.filter((employee) => {\n      let employeeStr = Object.values(employee).join(\"\");\n      return employeeStr.toLowerCase().indexOf(value.toLowerCase()) !== -1;\n    });\n    this.setState({\n      [name]: value,\n    });\n    this.setState({\n      users: result,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <SearchForm\n            search={this.state.search}\n            handleInputChange={this.handleInputChange}\n          />\n        </div>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th onClick={this.handlesSortChange}>Name</th>\n              <th onClick={this.handlesSortChange}>Phone</th>\n              <th onClick={this.handlesSortChange}>Email</th>\n              <th onClick={this.handlesSortChange}>DOB</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.users.map((user, i) => {\n              return (\n                <UserResultsList\n                  name={user.name.first}\n                  image={user.picture.thumbnail}\n                  phone={user.phone}\n                  email={user.email}\n                  birthdate={user.dob.date}\n                  last={user.name.last}\n                  key={i}\n                />\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n","// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Content from './components/SearchResultContainer'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n\n      <Content/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}